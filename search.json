[{"title":"iOS扩展新特性之3DTouch开发","url":"http://riceRound.github.io/2017/10/19/iOS扩展新特性之3DTouch开发/","content":"<p>3D Touch是在iPhone6s之后且系统是iOS9以上才能使用的功能</p>\n<p>总的来说分如下两种<br>（1）A user can now press your Home screen icon to immediately access functionality provided by your app.<br>（2）Within your app, a user can now press views to see previews of additional content and gain accelerated access to features.<br>一种是按压应用icon弹出的快捷菜单，另一种是在应用里面，按压view弹出另一个视图，再深按一次可push到另一个页面。</p>\n<h3 id=\"一-Home-Screen-Quick-Actions（按压应用图标）\"><a href=\"#一-Home-Screen-Quick-Actions（按压应用图标）\" class=\"headerlink\" title=\"一. Home Screen Quick Actions（按压应用图标）\"></a>一. Home Screen Quick Actions（按压应用图标）</h3><p>在info.plist文件里添加一项UIApplicationShortcutItems，这是个数组，里面添加任意项，Item0里面的三项分别是图片名称、文本内容、类型，在AppDelegate里是根据这个类型跳转到指定页的。<br><img src=\"http://upload-images.jianshu.io/upload_images/1839277-c44841ad395d13ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"屏幕快照 2017-01-19 17.49.33.png\"></p>\n<p>在AppDelegate如下方法里实现跳转</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (<span class=\"built_in\">BOOL</span>)application:(<span class=\"built_in\">UIApplication</span> *)application openURL:(<span class=\"built_in\">NSURL</span> *)url sourceApplication:(<span class=\"built_in\">NSString</span> *)sourceApplication annotation:(<span class=\"keyword\">id</span>)annotation</div></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (articleType == kTypeAttetion) &#123;</div><div class=\"line\">    [<span class=\"keyword\">self</span>.tabbar setTabBarSelectedWithIndex:kTabbarTypeAttention];</div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    [<span class=\"keyword\">self</span>.tabbar setTabBarSelectedWithIndex:kTabbarTypeHome];</div><div class=\"line\">&#125;</div><div class=\"line\">HBBaseNavController *nc = (HBBaseNavController *)<span class=\"keyword\">self</span>.tabbar.selectedViewController;</div><div class=\"line\">[nc popToRootViewControllerAnimated:<span class=\"literal\">YES</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">UIViewController</span> *vc = [[<span class=\"built_in\">UIViewController</span> alloc] init];</div><div class=\"line\">  [nc pushViewController:vc animated:<span class=\"literal\">YES</span>];</div></pre></td></tr></table></figure>\n<p>跳转的时候要注意的是，先让TabBarViewController跳转到指定Tab，再让这个Tab下的NavigationController 回到根视图（popToRootViewController），然后再push到对应的ViewController里去。</p>\n<h3 id=\"二-Peek-and-Pop（弹出一个视图和push到一个新的页面）\"><a href=\"#二-Peek-and-Pop（弹出一个视图和push到一个新的页面）\" class=\"headerlink\" title=\"二. Peek and Pop（弹出一个视图和push到一个新的页面）\"></a>二. Peek and Pop（弹出一个视图和push到一个新的页面）</h3><ol>\n<li>注册事件</li>\n</ol>\n<p>如果是在一个tableview上实现这个功能，则需要在cellForRow里面去注册这个事件，</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> (IOS9_OR_LATER) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>.traitCollection.forceTouchCapability == <span class=\"built_in\">UIForceTouchCapabilityAvailable</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!cell.hasRegister3DTouch) &#123;</div><div class=\"line\">            [[<span class=\"keyword\">self</span> viewController] registerForPreviewingWithDelegate:HBTouchDelegate sourceView:cell];</div><div class=\"line\">            cell.hasRegister3DTouch = <span class=\"literal\">YES</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这里面有两点重要的处理：</p>\n<ul>\n<li>第一点是关于这个cell是否被注册过，由于tableview的cell是复用的，所以只注册一遍即可，否则在列表上拉加载几屏后会出现严重的卡顿。</li>\n<li>第二点是这个View所属ViewController的代理指向问题，如果有多个列表，每个列表里都要注册这个代理，这样每个列表里都要实现这个代理的方法，同样的方法要写很多遍，这明显不符合我们编程简洁、高效的宗旨，所以可以把代理的实现抽象成一个类，然后注册时将代理指向这个类（在上面代码中指的是HBTouchDelegate，实现的就是UIViewControllerPreviewingDelegate的两个代理方法）。</li>\n</ul>\n<ol>\n<li>实现代理方法</li>\n</ol>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#pragma mark - UIViewControllerPreviewingDelegate</span></div><div class=\"line\">- (<span class=\"keyword\">nullable</span> <span class=\"built_in\">UIViewController</span> *)previewingContext:(<span class=\"keyword\">id</span> &lt;<span class=\"built_in\">UIViewControllerPreviewing</span>&gt;)previewingContext viewControllerForLocation:(<span class=\"built_in\">CGPoint</span>)location &#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">UIView</span> *sourceCell = [previewingContext sourceView];</div><div class=\"line\"><span class=\"keyword\">if</span> (![[sourceCell viewController].presentedViewController isKindOfClass:[HBPeekViewController <span class=\"keyword\">class</span>]]) &#123;</div><div class=\"line\">    HBPeekViewController *peekViewController = [HBPeekViewController new];</div><div class=\"line\"> peekViewController.preferredContentSize = <span class=\"built_in\">CGSizeMake</span>(<span class=\"number\">0</span>, <span class=\"number\">300</span>);<span class=\"comment\">//这个是弹出视图的宽高，默认是屏幕宽高</span></div><div class=\"line\">    <span class=\"keyword\">return</span> peekViewController;</div><div class=\"line\"> &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">nil</span>;</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (<span class=\"keyword\">void</span>)previewingContext:(<span class=\"keyword\">id</span> &lt;<span class=\"built_in\">UIViewControllerPreviewing</span>&gt;)previewingContext commitViewController:(<span class=\"built_in\">UIViewController</span> *)viewControllerToCommit <span class=\"built_in\">NS_AVAILABLE_IOS</span>(<span class=\"number\">9</span>_0) &#123;</div><div class=\"line\">[[[previewingContext sourceView] viewController] jumpWithArticleEntity:(HBArticleEntity *)<span class=\"keyword\">self</span>.touchEntity];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li>peekViewController中给弹出的视图添加一些快捷操作，点赞、收藏、对上面的文字进行复制等等，只要在previewActionItems方法，创建UIPreviewAction到数组中，可以在UIPreviewAction的block里实现对应的操作即可</li>\n</ol>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (<span class=\"built_in\">NSArray</span>&lt;<span class=\"keyword\">id</span>&lt;<span class=\"built_in\">UIPreviewActionItem</span>&gt;&gt;*)previewActionItems &#123;</div><div class=\"line\"><span class=\"comment\">// 生成UIPreviewAction</span></div><div class=\"line\"> <span class=\"built_in\">UIPreviewAction</span> *action1 = [<span class=\"built_in\">UIPreviewAction</span> actionWithTitle:<span class=\"string\">@\"赞\"</span> style:<span class=\"built_in\">UIPreviewActionStyleDefault</span> handler:^(<span class=\"built_in\">UIPreviewAction</span> * _Nonnull action, <span class=\"built_in\">UIViewController</span> * _Nonnull previewViewController) &#123;</div><div class=\"line\">         <span class=\"comment\">//do something</span></div><div class=\"line\"> &#125;];</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">UIPreviewAction</span> *action2 = [<span class=\"built_in\">UIPreviewAction</span> actionWithTitle:<span class=\"string\">@\"看全文\"</span> style:<span class=\"built_in\">UIPreviewActionStyleDefault</span> handler:^(<span class=\"built_in\">UIPreviewAction</span> * _Nonnull action, <span class=\"built_in\">UIViewController</span> * _Nonnull previewViewController) &#123;</div><div class=\"line\">   <span class=\"comment\">//do something</span></div><div class=\"line\">&#125;];</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">UIPreviewAction</span> *action3 = [<span class=\"built_in\">UIPreviewAction</span> actionWithTitle:<span class=\"string\">@\"收藏\"</span> style:<span class=\"built_in\">UIPreviewActionStyleDefault</span> handler:^(<span class=\"built_in\">UIPreviewAction</span> * _Nonnull action, <span class=\"built_in\">UIViewController</span> * _Nonnull previewViewController) &#123;</div><div class=\"line\">   <span class=\"comment\">//do something</span></div><div class=\"line\"> &#125;];</div><div class=\"line\"> <span class=\"built_in\">NSArray</span> *group = <span class=\"literal\">nil</span>;</div><div class=\"line\"> group = @[action1, action2, action3];</div><div class=\"line\"> <span class=\"keyword\">return</span> group;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>到这里3DTouch主要的几点就讲完啦！</p>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://developer.apple.com/library/prerelease/content/documentation/UserExperience/Conceptual/Adopting3DTouchOniPhone/index.html#//apple_ref/doc/uid/TP40016543\" target=\"_blank\" rel=\"external\">https://developer.apple.com/library/prerelease/content/documentation/UserExperience/Conceptual/Adopting3DTouchOniPhone/index.html#//apple_ref/doc/uid/TP40016543</a></li>\n</ul>\n","categories":[],"tags":[]},{"title":"Hello World","url":"http://riceRound.github.io/2017/10/19/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"about","url":"http://riceRound.github.io/about/index.html","content":"","categories":[],"tags":[]}]